@using BlazorUI.Models 
@using Radzen
@using Radzen.Blazor
@inject IJSRuntime JS
@inject NavigationManager Navigation 
@inject TarefaService TarefaService 
@inject DialogService DialogService
@rendermode InteractiveServer 


@* TODO Tag helper is Reapeated, I might want to seperate *@
<RadzenTemplateForm TItem="Tarefa" Data="@model" Submit=@OnSubmit>
    <RadzenStack Gap="1rem">
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Wrap="FlexWrap.Wrap">
            <RadzenLabel Text="Title" Style="width: 4rem;" />
            <RadzenTextBox @bind-Value="@model.Text" Name="Text" Style="width: 12rem;" />
            <RadzenRequiredValidator Component="Text" Text="Title is required" />
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Wrap="FlexWrap.Wrap">
            <RadzenLabel Text="Description" Style="width: 4rem;" />
            <RadzenTextBox @bind-Value="@model.Descricao" Name="Description" Style="width: 12rem; height: 6rem;" Multiline="true" />
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Wrap="FlexWrap.Wrap">
            <RadzenLabel Text="Start" Style="width: 4rem;" />
            <RadzenDatePicker @bind-Value="@model.Start" Name="Start" ShowTime="true" Style="width: 12rem;" />
            <RadzenRequiredValidator Component="Start" Text="Start is required" />
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Wrap="FlexWrap.Wrap">
            <RadzenLabel Text="End" Style="width: 4rem;" />
            <RadzenDatePicker Name="End" @bind-Value="@model.End" ShowTime="true" Style="width: 12rem;" />
            <RadzenRequiredValidator Component="End" Text="End is required" />
            @* <RadzenValidator Text="End must be greater than Start" Component="End" Validate="ValidateEnd" /> *@
            <RadzenCustomValidator Component="End" Validator="@(() => ValidateEnd(model.End))" Text="End date must be greater than start date!" Popup="false" />
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" >
            <RadzenButton ButtonType="ButtonType.Submit" Text="Save" />
        </RadzenStack>
    </RadzenStack>
</RadzenTemplateForm>

@code {
    [Parameter]
    public DateTime Start { get; set; }

    [Parameter]
    public DateTime End { get; set; }

    Tarefa model = new Tarefa();

    protected override void OnParametersSet()
    {
        model.Start = Start;
        model.End = End;
    }

    bool ValidateEnd(object value)
    {
        if (model.Start == default)
            model.Start = DateTime.Today;
        if (value is DateTime end)
        {
            return end > model.Start;
        }
        return false;
    }

    void OnSubmit(Tarefa model)
    {
        if (model.Descricao == null)
            model.Descricao = "";
        DialogService.Close(model);
    }
}